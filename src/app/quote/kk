import { Component, OnInit } from '@angular/core';
import { Quote } from '../quote';

@Component({
  selector: 'app-quote',
  templateUrl: './quote.component.html',
  styleUrls: ['./quote.component.css'],
})
export class QuoteComponent implements OnInit {
  quotes: Quote[] = [
    new Quote(
      1,
      'Happiness is not something ready-made. It comes from your own actions.',
      'Dalai Lama',
      0,
      0,
      new Date(2020, 3, 14)
    ),
    new Quote(
      2,
      'Most people would rather be certain theyâ€™re miserable, than risk being happy.',
      0,
      0,
      'Dr. Robert Anthony',
      new Date(2019, 6, 9)
    ),
    new Quote(
      3,
      'There are more things to alarm us than to harm us, and we suffer more often in apprehension than reality.',
      'Seneca',
      0,
      0,
      new Date(2022, 1, 12)
    ),
    new Quote(
      4,
      'The two enemies of human happiness are pain and boredom.',
      'Arthur Schopenhauer',
      0,
      0,
      new Date(2019, 0, 18)
    ),
    new Quote(
      5,
      'The unhappy derive comfort from the misfortunes of others.',
      'Aesop',
      0,
      0,
      new Date(2019, 2, 14)
    ),
    new Quote(
      6,
      'Life without love is like a tree without blossoms or fruit.',
      'Khalil Gibran',
      0,
      0,
      new Date(2030, 3, 14)
    ),
  ];

  toggleDetails(index) {
    this.quotes[index].showAuthor = !this.quotes[index].showAuthor;
  }
  completeQuote(isComplete, index) {
    if (isComplete) {
      this.quotes.splice(index, 1);
    }
  }

  deleteQuote(isComplete, index) {
    if (isComplete) {
      let toDelete = confirm(
        `Are you sure you want to delete ${this.quotes[index].name}?`
      );

      if (toDelete) {
        this.quotes.splice(index, 1);
      }
    }
  }

  addNewQuote(quote) {
    let goalLength = this.quotes.length;
    quote.id = goalLength + 1;
    quote.completeDate = new Date(quote.completeDate);
    this.quotes.push(quote);
  }

  preNum: number;
  lastNum: number;
  counter: number;

  HighestUpvote() {
    this.preNum = 0;
    this.lastNum = 0;
    for (this.counter = 0; this.counter < this.quotes.length; this.counter++) {
      this.lastNum = this.quotes[this.counter].like;
      if (this.lastNum > this.preNum) {
        this.preNum = this.lastNum;
      }
    }
    return this.preNum;
  }

  constructor() {}

  ngOnInit() {}
}
